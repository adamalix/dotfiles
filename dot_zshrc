# completions
if [ -d "$HOMEBREW_PREFIX/share/zsh/site-functions" ]; then
  fpath+=("$HOMEBREW_PREFIX/share/zsh/site-functions")
fi

# Initialize completions
autoload -Uz compinit && compinit

# PATH additions
if [ -s "$HOME/.config/emacs/bin" ]; then
  path+=("$HOME/.config/emacs/bin")
fi

# Interactive tools and utilities
if [[ "$CLAUDECODE" != "1" ]] && [ -s "$HOME/.scm_breeze/scm_breeze.sh" ]; then
  source "$HOME/.scm_breeze/scm_breeze.sh" || echo "Warning: Failed to load SCM Breeze"
fi

# Development environment managers
if [[ -f $HOME/.local/bin/mise ]]; then
  eval "$($HOME/.local/bin/mise activate --shims zsh)" || echo "Warning: Failed to activate mise"
fi

if command -v uv >/dev/null 2>&1; then
  eval "$(uv generate-shell-completion zsh)" || echo "Warning: Failed to load uv completions"
fi

if command -v pnpm  >/dev/null 2>&1; then
  eval "$(pnpm completion zsh)" || echo "Warning: Failed to load pnpm completions"
fi

if command -v fzf >/dev/null 2>&1; then
  source <(fzf --zsh)
  export FZF_CTRL_T_OPTS="
    --walker-skip .git,node_modules,target
    --preview 'bat -n --color=always {}'
    --bind 'ctrl-/:change-preview-window(down|hidden|)'"
fi

if command -v codex >/dev/null 2>&1; then
  eval "$(codex completion zsh)" || echo "Warning: Failed to load codex completions"
fi

# Java setup - SDKMAN must be at end per their requirements
if [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]]; then
  export SDKMAN_DIR="$HOME/.sdkman"
  source "$HOME/.sdkman/bin/sdkman-init.sh" || echo "Warning: Failed to initialize SDKMAN"
elif [[ -e "/usr/libexec/java_home" ]]; then
  export JAVA_HOME=`/usr/libexec/java_home -v 18` || echo "Warning: Failed to set JAVA_HOME"
fi

# Cloud tools
if [[ -e "$(brew --prefix)/share/google-cloud-sdk/" ]]; then
  source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc" || echo "Warning: Failed to load Google Cloud SDK PATH"
  source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc" || echo "Warning: Failed to load Google Cloud SDK completions"
fi

# Aliases
alias ls='ls -G'

# Configuration exports
export TAPLO_CONFIG=~/.config/taplo/.taplo.toml

# Local overrides (should be last)
if [[ -f $HOME/.zshrc_local ]]; then
  source $HOME/.zshrc_local || echo "Warning: Failed to load local zshrc configuration"
fi
